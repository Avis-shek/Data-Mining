--------------------------------------------------------------
-- Database creation Script

-- Auto-Generated by QSEE-SuperLite (c) 2001-2004 QSEE-Technologies Ltd.

-- Verbose generation: ON

-- note: spaces within table/column names have been replaced by underscores (_)

-- Target DB: SQL2

-- Entity Model :Entity Relationship Diagram

-- To drop the tables generated by this script run -
--   'C:\Users\user\Desktop\L6_Module\dbslides\Assignment\Abhisek_drop.sql'

--------------------------------------------------------------
--------------------------------------------------------------
-- Table Creation --

-- Each entity on the model is represented by a table that needs to be created within the Database.
-- Within SQL new tables are created using the CREATE TABLE command.
-- When a table is created its name and its attributes are defined.
-- The values of which are derived from those specified on the model.
-- Certain constraints are sometimes also specified, such as identification of primary keys.

-- Create a Database table to represent the "stage_reported_crime" entity.

DROP TABLE stage_reported_crime;
DROP TABLE Police_employee;
DROP TABLE Station;
DROP TABLE Crime_details;

CREATE TABLE stage_reported_crime(
	crime_id	NUMBER(10) NOT NULL,
    pk_report_id NUMBER(10),
	date_reported	DATE,
	crime_category	VARCHAR2(80),
	crime_status	VARCHAR2(80),
	crime_close_date	DATE,
	fk1_officer_id	NUMBER(10),
	fk2_station_id	NUMBER(10),
    datasource VARCHAR2(80),
	-- Specify the PRIMARY KEY constraint for table "stage_reported_crime".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_stage_reported_crime PRIMARY KEY (crime_id)
);

-- Create a Database table to represent the "Police_employee" entity.
CREATE TABLE Police_employee(
	officer_id	NUMBER(10) NOT NULL,
    pk_police_id NUMBER(10),
	firstname	VARCHAR2(80),
	lastname	VARCHAR2(80),
	fk1_station_id	NUMBER(10),
    datasource VARCHAR2(80),
	-- Specify the PRIMARY KEY constraint for table "Police_employee".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Police_employee PRIMARY KEY (officer_id)
);

-- Create a Database table to represent the "Station" entity.
CREATE TABLE Station(
    station_no	NUMBER(10) NOT NULL,
    pk_station_id NUMBER(10),
	station_name	VARCHAR2(80),
	region	VARCHAR2(80),
    datasource VARCHAR2(80),
	-- Specify the PRIMARY KEY constraint for table "Station".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_s_Station PRIMARY KEY (station_no)
);

-- Create a Database table to represent the "Crime_details" entity.
CREATE TABLE Crime_details(
	c_detail_id	NUMBER(10) NOT NULL,
	crime_id	NUMBER(10) NOT NULL,
	officer_id	NUMBER(10),
	work_start_date	DATE,
	work_end_date	DATE,
    datasource VARCHAR2(80),
	-- Specify the PRIMARY KEY constraint for table "Crime_details".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Crime_details PRIMARY KEY (c_detail_id)
);

   ---------------STAGE_STATION------------
DROP SEQUENCE stage_station_seq;
CREATE SEQUENCE stage_station_seq
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1;
/

   CREATE OR REPLACE TRIGGER stage_station_TRIG
BEFORE INSERT ON Station
FOR EACH ROW 
BEGIN
    IF :NEW.station_no IS NULL THEN
        SELECT stage_station_seq.NEXTVAL INTO :NEW.station_no FROM SYS.DUAL;
    END IF;    
END;
/

   ---------------Crime_details------------

DROP SEQUENCE stage_crime_details_seq;
CREATE SEQUENCE stage_crime_details_seq
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1;
/

CREATE OR REPLACE TRIGGER stage_crime_details_TRIG
BEFORE INSERT ON Crime_details
FOR EACH ROW 
BEGIN
    IF :NEW.c_detail_id IS NULL THEN
        SELECT stage_crime_details_seq.NEXTVAL INTO :NEW.c_detail_id FROM SYS.DUAL;
    END IF;    
END;
/

  ---------------Police_employees------------

DROP SEQUENCE stage_police_employee_seq;
CREATE SEQUENCE stage_police_employee_seq
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1;
/

CREATE OR REPLACE TRIGGER stage_police_employee_TRIG
BEFORE INSERT ON Police_employee
FOR EACH ROW 
BEGIN
    IF :NEW.officer_id IS NULL THEN
        SELECT stage_police_employee_seq.NEXTVAL INTO :NEW.officer_id FROM SYS.DUAL;
    END IF;    
END;
/


  ---------------stage_reported_crime------------

DROP SEQUENCE stage_reported_crime_seq;
CREATE SEQUENCE stage_reported_crime_seq
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1;
/

CREATE OR REPLACE TRIGGER stage_reported_crime_TRIG
BEFORE INSERT ON stage_reported_crime
FOR EACH ROW 
BEGIN
    IF :NEW.crime_id IS NULL THEN
        SELECT stage_reported_crime_seq.NEXTVAL INTO :NEW.crime_id FROM SYS.DUAL;
    END IF;    
END;
/


--------------------------------------------------------------
-- End of DDL file auto-generation
--------------------------------------------------------------
